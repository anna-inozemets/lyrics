{"version":3,"sources":["components/ThemeContext/ThemeContext.tsx","components/MainScreen/MainScreen.tsx","components/HistoryScreen/HistoryScreen.tsx","components/Loader/Loader.tsx","components/SearchForm/SearchForm.tsx","api/getSongByArtist.ts","components/SongInfo/SongInfo.tsx","components/SearchScreen/SearchScreen.tsx","components/PageNotFound/PageNotFound.tsx","components/HomeIcon/HomeIcon.tsx","components/ThemeSwitcher/ThemeSwitcher.tsx","components/Header/Header.tsx","App.tsx","index.tsx"],"names":["ThemeContext","createContext","isDarkTheme","toggleTheme","value","ThemeProvider","children","useState","setIsDarkTheme","Provider","MainScreen","useContext","className","classNames","dark","to","HistoryScreen","Loader","loaderItems","Array","from","length","_","index","map","item","SearchForm","artist","updateArtist","title","updateTitle","handleSearch","isArtistNameFocused","setIsArtistNameFocused","isSongTitleFocused","setIsSongTitleFocused","updateValue","useCallback","event","setValue","target","handleFocus","setIsInputFocused","handleBlur","htmlFor","type","id","onChange","onFocus","onBlur","onClick","getSongByArtist","a","options","apiKey","optimizeQuery","getSong","song","console","error","url","lyrics","albumArt","SongInfo","songData","SearchScreen","setArtist","setTitle","setSongData","isLoading","setIsLoading","isError","setIsError","loadSongData","loadedSongData","updatedArtist","updatedTitle","PageNotFound","HomeIcon","classnames","xmlns","viewBox","width","height","d","ThemeSwitcher","checked","Header","App","path","element","replace","ReactDOM","render","document","getElementById"],"mappings":"8UAEaA,EAAeC,wBAAc,CACxCC,aAAa,EAEbC,YAAa,SAACC,OAOHC,EAAiC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC/C,EAAsCC,oBAAS,GAA/C,mBAAOL,EAAP,KAAoBM,EAApB,KAKA,OACE,cAACR,EAAaS,SAAd,CAAuBL,MAAO,CAAEF,cAAaC,YAL3B,SAACC,GACnBI,EAAeJ,KAIf,SACGE,KCbMI,G,YAAsB,WACjC,IAAQR,EAAgBS,qBAAWX,GAA3BE,YAER,OACE,sBAAKU,UAAU,uBAAf,UACE,oBAAIA,UAAWC,IAAW,2BAA4B,CAAEC,KAAMZ,IAA9D,sDAGA,sBAAKU,UAAU,4BAAf,UACE,cAAC,IAAD,CAASG,GAAG,UAAUH,UAAWC,IAAW,2BAA4B,CAAEC,KAAMZ,IAAhF,oBAGA,cAAC,IAAD,CAASa,GAAG,WAAWH,UAAWC,IAAW,2BAA4B,CAAEC,KAAMZ,IAAjF,6BCdKc,G,MAAgB,WAC3B,IAAQd,EAAgBS,qBAAWX,GAA3BE,YAER,OACE,qBAAKU,UAAU,yBAAf,SACE,oBAAIA,UAAWC,IAAW,6BAA8B,CAAEC,KAAMZ,IAAhE,+B,uBCLOe,G,YAAS,WACpB,IAAQf,EAAgBS,qBAAWX,GAA3BE,YACFgB,EAAcC,MAAMC,KAAK,CAAEC,OAAQ,IAAK,SAACC,EAAGC,GAAJ,OAAcA,EAAQ,KAEpE,OACE,qBAAKX,UAAU,oBAAf,SACE,qBAAKA,UAAU,SAAf,SACGM,EAAYM,KAAI,SAACC,GAAD,OACf,qBAEEb,UAAWC,IAAW,8BAAD,OACWY,GAC9B,CAAEX,KAAMZ,KAHLuB,YCAJC,G,MAA8B,SAAC,GAMrC,IALLC,EAKI,EALJA,OACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEQ7B,EAAgBS,qBAAWX,GAA3BE,YACR,EAAsDK,oBAAS,GAA/D,mBAAOyB,EAAP,KAA4BC,EAA5B,KACA,EAAoD1B,oBAAS,GAA7D,mBAAO2B,EAAP,KAA2BC,EAA3B,KAEMC,EAAcC,uBAClB,SAACC,EAA4CC,GAC3CA,EAASD,EAAME,OAAOpC,SAExB,CAACuB,EAAQE,IAGLY,EAAc,SAACC,GACnBA,GAAkB,IAGdC,EAAa,SAACD,EAA4CtC,GAC1DA,EAAMiB,OAAS,EACjBqB,GAAkB,GAElBA,GAAkB,IAItB,OACE,uBAAM9B,UAAU,OAAhB,UACE,sBAAKA,UAAU,sBAAf,UACE,uBACEgC,QAAQ,aACRhC,UAAWC,IACT,cACA,CAAE,uBAAwBmB,GAC1B,CAAElB,KAAMZ,IALZ,yBAUA,uBACEU,UAAWC,IAAW,cAAe,CAAEC,KAAMZ,IAC7C2C,KAAK,OACLC,GAAG,aACH1C,MAAOuB,EACPoB,SAAU,SAACT,GAAD,OAAWF,EAAYE,EAAOV,IACxCoB,QAAS,kBAAMP,EAAYR,IAC3BgB,OAAQ,kBAAMN,EAAWV,EAAwBN,SAGrD,sBAAKf,UAAU,sBAAf,UACE,uBACEgC,QAAQ,YACRhC,UAAWC,IACT,cACA,CAAE,uBAAwBqB,GAC1B,CAAEpB,KAAMZ,IALZ,wBAUA,uBACEU,UAAWC,IAAW,cAAe,CAAEC,KAAMZ,IAC7C2C,KAAK,OACLzC,MAAOyB,EACPiB,GAAG,YACHC,SAAU,SAACT,GAAD,OAAWF,EAAYE,EAAOR,IACxCkB,QAAS,kBAAMP,EAAYN,IAC3Bc,OAAQ,kBAAMN,EAAWR,EAAuBN,SAGpD,wBACEjB,UAAWC,IAAW,eAAgB,CAAEC,KAAMZ,IAC9C2C,KAAK,SACLK,QAASnB,EAHX,yB,QCrFOoB,EAAe,uCAAG,WAAOxB,EAAgBE,GAAvB,iBAAAuB,EAAA,6DACvBC,EAAU,CACdC,OAAQ,mEACRzB,QACAF,SACA4B,eAAe,GALY,kBASFC,kBAAQH,GATN,cASrBI,EATqB,yBAWpBA,GAXoB,uCAc3BC,QAAQC,MAAM,SAAd,MAd2B,kBAgBpB,CACLb,GAAI,EACJjB,MAAO,GACP+B,IAAK,GACLC,OAAQ,GACRC,SAAU,KArBe,yDAAH,wDCIfC,EAA4B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1C,OAAoB,IAAhBA,EAASlB,GAET,wCAOF,+BACE,6BAAKkB,EAASlB,KACd,6BAAKkB,EAASnC,QACd,6BAAKmC,EAASJ,MACd,6BAAKI,EAASH,SACd,6BAAKG,EAASF,eCXPG,EAAe,WAC1B,IAAQ/D,EAAgBS,qBAAWX,GAA3BE,YACR,EAA4BK,mBAAS,IAArC,mBAAOoB,EAAP,KAAeuC,EAAf,KACA,EAA0B3D,mBAAS,IAAnC,mBAAOsB,EAAP,KAAcsC,EAAd,KACA,EAAgC5D,mBAAsB,MAAtD,mBAAOyD,EAAP,KAAiBI,EAAjB,KACA,EAAkC7D,oBAAS,GAA3C,mBAAO8D,EAAP,KAAkBC,EAAlB,KACA,EAA8B/D,oBAAS,GAAvC,mBAAOgE,EAAP,KAAgBC,EAAhB,KAUMC,EAAY,uCAAG,4BAAArB,EAAA,sEAEjBkB,GAAa,GAFI,SAGYnB,EAAgBxB,EAAQE,GAHpC,OAGX6C,EAHW,OAKjBN,EAAYM,GALK,gDAOjBJ,GAAa,GACbE,GAAW,GARM,yBAUjBF,GAAa,GAVI,4EAAH,qDAoBlB,OACE,sBAAK1D,UAAU,yBAAf,UACE,oBAAIA,UAAWC,IAAW,6BAA8B,CAAEC,KAAMZ,IAAhE,2BACA,cAAC,EAAD,CACEyB,OAAQA,EACRC,aAjCe,SAAC+C,GACpBT,EAAUS,IAiCN9C,MAAOA,EACPC,YA/Bc,SAAC8C,GACnBT,EAASS,IA+BL7C,aAde,WACnBmC,EAAU,IACVC,EAAS,IACTM,OAaGJ,GACC,cAAC,EAAD,IAEDE,GACC,8CAIDP,GACC,cAAC,EAAD,CAAUA,SAAUA,QC/Dfa,G,OAAe,WAC1B,OACE,kDCCSC,G,cAAW,WACtB,IAAQ5E,EAAgBS,qBAAWX,GAA3BE,YAER,OACE,cAAC,IAAD,CAASa,GAAG,QAAZ,SACE,sBAAKH,UAAWmE,IAAW,gBAAiB,CAAEjE,KAAMZ,IAAgB8E,MAAM,6BAA6BC,QAAQ,YAAYnC,GAAG,SAASoC,MAAM,KAAKC,OAAO,KAAzJ,UACE,sBAAMC,EAAE,ugEACR,sBAAMA,EAAE,q1CCPHC,G,OAAgB,WAC3B,IAAQlF,EAAgBQ,qBAAWX,GAA3BG,YAER,OACE,sBAAKS,UAAU,kBAAf,UACE,uBACEA,UAAU,wBACVkC,GAAG,SACHD,KAAK,WACLE,SAAU,SAAAT,GACRnC,EAAYmC,EAAME,OAAO8C,YAG7B,uBAAO1C,QAAQ,SAAShC,UAAU,+BCd3B2E,EAAS,kBACpB,yBAAQ3E,UAAU,SAAlB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCGS4E,EAAgB,WAC3B,IAAQtF,EAAgBS,qBAAWX,GAA3BE,YAER,OACE,qBAAKU,UAAWC,IAAW,UAAW,CAAEC,KAAMZ,IAA9C,SACE,sBAAKU,UAAWC,IAAW,qBAAsB,CAAEC,KAAMZ,IAAzD,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOuF,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,MAC9B,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAU3E,GAAG,IAAI4E,SAAO,eChB/DC,IAASC,OACP,cAAC,EAAD,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,U","file":"static/js/main.2f5ce93e.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\n\nexport const ThemeContext = createContext({\n  isDarkTheme: false,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  toggleTheme: (value: boolean) => {},\n});\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const ThemeProvider: React.FC<Props> = ({ children }) => {\n  const [isDarkTheme, setIsDarkTheme] = useState(false);\n  const toggleTheme = (value: boolean) => {\n    setIsDarkTheme(value);\n  };\n\n  return (\n    <ThemeContext.Provider value={{ isDarkTheme, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n","import React, { useContext } from 'react';\nimport classNames from 'classnames';\nimport './MainScreen.scss';\nimport '../../utils/title.scss';\nimport { NavLink } from 'react-router-dom';\nimport { ThemeContext } from '../ThemeContext';\n\nexport const MainScreen:React.FC = () => {\n  const { isDarkTheme } = useContext(ThemeContext);\n\n  return (\n    <div className=\"main-screen__content\">\n      <h1 className={classNames('main-screen__title title', { dark: isDarkTheme })}>\n        LyricQuest: Explore and Find Song Lyrics\n      </h1>\n      <div className=\"main-screen__link-wrapper\">\n        <NavLink to=\"/lyrics\" className={classNames('main-screen__link-button', { dark: isDarkTheme })}>\n          Lyrics\n        </NavLink>\n        <NavLink to=\"/history\" className={classNames('main-screen__link-button', { dark: isDarkTheme })}>\n          History\n        </NavLink>\n      </div>\n    </div>\n  );\n};\n","import React, { useContext } from 'react';\nimport './HistoryScreen.scss';\nimport classNames from 'classnames';\nimport { ThemeContext } from '../ThemeContext';\n\nexport const HistoryScreen = () => {\n  const { isDarkTheme } = useContext(ThemeContext);\n\n  return (\n    <div className=\"search-screen__content\">\n      <h2 className={classNames('search-screen__title title', { dark: isDarkTheme })}>Search screen</h2>\n    </div>\n  );\n};\n","import React, { useContext } from 'react';\nimport classNames from 'classnames';\nimport './Loader.scss';\nimport { ThemeContext } from '../ThemeContext';\n\nexport const Loader = () => {\n  const { isDarkTheme } = useContext(ThemeContext);\n  const loaderItems = Array.from({ length: 5 }, (_, index) => index + 1);\n\n  return (\n    <div className=\"loader__container\">\n      <div className=\"loader\">\n        {loaderItems.map((item) => (\n          <div\n            key={item}\n            className={classNames(\n              `loader__item loader__item--${item}`,\n              { dark: isDarkTheme },\n            )}\n          >\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useCallback, useState, useContext } from 'react';\nimport classNames from 'classnames';\nimport { ThemeContext } from '../ThemeContext';\nimport './SearchForm.scss';\n\ntype Props = {\n  artist: string,\n  updateArtist: (value: string) => void,\n  title: string,\n  updateTitle: (value: string) => void,\n  handleSearch: () => void,\n};\n\nexport const SearchForm: React.FC<Props> = ({\n  artist,\n  updateArtist,\n  title,\n  updateTitle,\n  handleSearch,\n}) => {\n  const { isDarkTheme } = useContext(ThemeContext);\n  const [isArtistNameFocused, setIsArtistNameFocused] = useState(false);\n  const [isSongTitleFocused, setIsSongTitleFocused] = useState(false);\n\n  const updateValue = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>, setValue: (value: string) => void) => {\n      setValue(event.target.value);\n    },\n    [artist, title],\n  );\n\n  const handleFocus = (setIsInputFocused:(value: boolean) => void) => {\n    setIsInputFocused(true);\n  };\n\n  const handleBlur = (setIsInputFocused:(value: boolean) => void, value: string) => {\n    if (value.length > 0) {\n      setIsInputFocused(true);\n    } else {\n      setIsInputFocused(false);\n    }\n  };\n\n  return (\n    <form className=\"form\">\n      <div className=\"form__input-wrapper\">\n        <label\n          htmlFor=\"artistName\"\n          className={classNames(\n            'form__label',\n            { 'form__label--focused': isArtistNameFocused },\n            { dark: isDarkTheme },\n          )}\n        >\n          Artist name\n        </label>\n        <input\n          className={classNames('form__input', { dark: isDarkTheme })}\n          type=\"text\"\n          id=\"artistName\"\n          value={artist}\n          onChange={(event) => updateValue(event, updateArtist)}\n          onFocus={() => handleFocus(setIsArtistNameFocused)}\n          onBlur={() => handleBlur(setIsArtistNameFocused, artist)}\n        />\n      </div>\n      <div className=\"form__input-wrapper\">\n        <label\n          htmlFor=\"songTitle\"\n          className={classNames(\n            'form__label',\n            { 'form__label--focused': isSongTitleFocused },\n            { dark: isDarkTheme },\n          )}\n        >\n          Song title\n        </label>\n        <input\n          className={classNames('form__input', { dark: isDarkTheme })}\n          type=\"text\"\n          value={title}\n          id=\"songTitle\"\n          onChange={(event) => updateValue(event, updateTitle)}\n          onFocus={() => handleFocus(setIsSongTitleFocused)}\n          onBlur={() => handleBlur(setIsSongTitleFocused, title)}\n        />\n      </div>\n      <button\n        className={classNames('form__button', { dark: isDarkTheme })}\n        type=\"button\"\n        onClick={handleSearch}\n      >\n        Search\n      </button>\n    </form>\n  );\n};\n","import { getSong } from 'genius-lyrics-api';\nimport { Song } from '../types/Song';\n\nexport const getSongByArtist = async (artist: string, title: string) => {\n  const options = {\n    apiKey: 'NDPGP460VWLWeXOUQcD59kdKD9AXc1DSqfjM8pA4O3cPfuPNW6lubQmzQxWcXPGC',\n    title,\n    artist,\n    optimizeQuery: true,\n  };\n\n  try {\n    const song: Song = await getSong(options);\n\n    return song;\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error('Error:', error);\n\n    return {\n      id: 0,\n      title: '',\n      url: '',\n      lyrics: '',\n      albumArt: '',\n    };\n  }\n};\n","import React from 'react';\nimport { Song } from '../../types/Song';\n\ntype Props = {\n  songData: Song,\n};\n\nexport const SongInfo: React.FC<Props> = ({ songData }) => {\n  if (songData.id === 0) {\n    return (\n      <p>\n        No data\n      </p>\n    );\n  }\n\n  return (\n    <ul>\n      <li>{songData.id}</li>\n      <li>{songData.title}</li>\n      <li>{songData.url}</li>\n      <li>{songData.lyrics}</li>\n      <li>{songData.albumArt}</li>\n    </ul>\n  );\n};\n","import React, { useContext, useState } from 'react';\nimport classNames from 'classnames';\nimport './SearchScreen.scss';\nimport '../../utils/title.scss';\nimport { Song } from '../../types/Song';\nimport { Loader } from '../Loader';\nimport { SearchForm } from '../SearchForm/SearchForm';\nimport { ThemeContext } from '../ThemeContext';\nimport { getSongByArtist } from '../../api/getSongByArtist';\nimport { SongInfo } from '../SongInfo';\n\nexport const SearchScreen = () => {\n  const { isDarkTheme } = useContext(ThemeContext);\n  const [artist, setArtist] = useState('');\n  const [title, setTitle] = useState('');\n  const [songData, setSongData] = useState<Song | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const updateArtist = (updatedArtist: string) => {\n    setArtist(updatedArtist);\n  };\n\n  const updateTitle = (updatedTitle: string) => {\n    setTitle(updatedTitle);\n  };\n\n  const loadSongData = async () => {\n    try {\n      setIsLoading(true);\n      const loadedSongData = await getSongByArtist(artist, title);\n\n      setSongData(loadedSongData);\n    } catch (error) {\n      setIsLoading(false);\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleSearch = () => {\n    setArtist('');\n    setTitle('');\n    loadSongData();\n  };\n\n  return (\n    <div className=\"search-screen__content\">\n      <h2 className={classNames('search-screen__title title', { dark: isDarkTheme })}>Search screen</h2>\n      <SearchForm\n        artist={artist}\n        updateArtist={updateArtist}\n        title={title}\n        updateTitle={updateTitle}\n        handleSearch={handleSearch}\n      />\n      {isLoading && (\n        <Loader />\n      )}\n      {isError && (\n        <p>\n          Error occured\n        </p>\n      )}\n      {songData && (\n        <SongInfo songData={songData} />\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport './PageNotFound.scss';\n\nexport const PageNotFound = () => {\n  return (\n    <h2>Page Not Found</h2>\n  );\n};\n","import React, { useContext } from 'react';\nimport classnames from 'classnames';\nimport './HomeIcon.scss';\nimport { NavLink } from 'react-router-dom';\nimport { ThemeContext } from '../ThemeContext';\n\nexport const HomeIcon = () => {\n  const { isDarkTheme } = useContext(ThemeContext);\n\n  return (\n    <NavLink to=\"/home\">\n      <svg className={classnames('home-svg-icon', { dark: isDarkTheme })} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 64 64\" id=\"guitar\" width=\"40\" height=\"40\">\n        <path d=\"M60.481 14.475a2.373 2.373 0 0 0-.663-1.911L57.7 10.445l-4.971-4.971a2.49 2.49 0 0 0-3.517 0l-1.07 1.07-.707-.708a1 1 0 0 0-1.414 1.414l.707.708-1.414 1.415-.708-.707a1 1 0 0 0-1.414 1.414l.707.707-.707.707a2.962 2.962 0 0 0-.578 3.407L31.4 26.12a10.017 10.017 0 0 0-11.537 1.637 9.148 9.148 0 0 0-1.894 2.755 12.3 12.3 0 0 0-9.833 4.9l1.6 1.2a10.2 10.2 0 0 1 .936-1.078A10.529 10.529 0 0 1 18.6 32.52a.983.983 0 0 0 .981-.663 7.172 7.172 0 0 1 1.693-2.686 7.934 7.934 0 0 1 8.6-1.53l-6.86 6.86c-.109-.006-.217-.016-.327-.016a6 6 0 1 0 6 6c0-.11-.011-.218-.016-.327l6.743-6.744.232.232A7.873 7.873 0 0 1 34 41.9a7.171 7.171 0 0 1-2.686 1.694 1 1 0 0 0-.663.981A10.356 10.356 0 0 1 19.69 55.521a12.483 12.483 0 0 1-8.317-3.721 11.945 11.945 0 0 1-2.737-13.365l-1.813-.845a13.839 13.839 0 0 0 2.252 14.652.99.99 0 0 0 .176.264l.706.706 2.828 2.828a14.476 14.476 0 0 0 9.652 4.306c.185.008.37.011.553.011a12.326 12.326 0 0 0 12.5-12.323 9.13 9.13 0 0 0 2.754-1.894c3.23-3.23 3.558-8.352 1.14-12.454l6.96-6.959-1.414-1.414-6.72 6.72c-.214-.253-.436-.5-.675-.74l9.736-9.737.871-.87.707.708-2.549 2.548 1.414 1.414 2.679-2.679A2.962 2.962 0 0 0 53.8 22.1l5.809-5.81a2.968 2.968 0 0 0 .872-1.815Zm-9.855-7.586a.488.488 0 0 1 .689 0l4.772 4.772.2.2a.485.485 0 0 1 0 .687l-1.776 1.776-4.241 4.241a1 1 0 0 1-1.415 0l-.007-.006-4.236-4.237a1 1 0 0 1 0-1.414Zm5.294 10.262-1.414 1.414-.707-.707 1.414-1.414Zm-30.4 26.163a4.1 4.1 0 0 1-5.658 0 4 4 0 1 1 5.658 0Zm1.414-7.071a5.994 5.994 0 0 0-1.66-1.169L43.9 16.443l1.414 1.415 1.415 1.414L28.1 37.9a6.011 6.011 0 0 0-1.171-1.657Zm9.9 8.485a7.192 7.192 0 0 1-2.685 1.694 1 1 0 0 0-.663.98A10.358 10.358 0 0 1 22.52 58.35a12.1 12.1 0 0 1-4.18-.942 14.157 14.157 0 0 0 1.824.123 12.327 12.327 0 0 0 12.495-12.323 9.144 9.144 0 0 0 2.755-1.895 9.575 9.575 0 0 0 2.686-7.775 8.073 8.073 0 0 1-1.272 9.19Zm14.137-24.041-.131-.131a2.962 2.962 0 0 0 .838-.577l.707-.707.707.707-.707.707a1 1 0 0 1-1.414.001Zm7.223-5.81-.86.86-.707-.707 1.07-1.07a2.529 2.529 0 0 0 .311-.378l.4.4a.4.4 0 0 1 .085.314.98.98 0 0 1-.299.581Z\"></path>\n        <path d=\"m48.85 10.08 1.415-1.415 1.414 1.415-1.414 1.414zM46.02 12.908l1.415-1.414 1.414 1.414-1.414 1.414zM51.678 12.908l1.414-1.414 1.414 1.414-1.414 1.414zM48.85 15.737l1.414-1.414 1.414 1.414-1.414 1.414zM19.873 53.316a9.934 9.934 0 0 0 5.375-1.577 1 1 0 1 0-1.08-1.683 7.974 7.974 0 0 1-5.839 1.111 1 1 0 0 0-.381 1.964 10.138 10.138 0 0 0 1.925.185zM6 26c2.243 0 4-1.318 4-3v-9.18l8-1.6v6.185A5.075 5.075 0 0 0 16 18c-2.243 0-4 1.318-4 3s1.757 3 4 3 4-1.318 4-3V11a1 1 0 0 0-1.2-.98l-10 2A1 1 0 0 0 8 13v7.405A5.075 5.075 0 0 0 6 20c-2.243 0-4 1.318-4 3s1.757 3 4 3zm10-4c-1.221 0-2-.592-2-1s.779-1 2-1 2 .592 2 1-.779 1-2 1zM6 22c1.221 0 2 .592 2 1s-.779 1-2 1-2-.592-2-1 .779-1 2-1zm50 33V45a1 1 0 0 0-1.2-.98l-10 2a1 1 0 0 0-.8.98v7.405A5.075 5.075 0 0 0 42 54c-2.243 0-4 1.318-4 3s1.757 3 4 3 4-1.318 4-3v-9.18l8-1.6v6.185A5.075 5.075 0 0 0 52 52c-2.243 0-4 1.318-4 3s1.757 3 4 3 4-1.318 4-3zm-14 3c-1.221 0-2-.592-2-1s.779-1 2-1 2 .592 2 1-.779 1-2 1zm10-2c-1.221 0-2-.592-2-1s.779-1 2-1 2 .592 2 1-.779 1-2 1zM33 3a1 1 0 0 0-1 1v7.4a5.075 5.075 0 0 0-2-.4c-2.243 0-4 1.318-4 3s1.757 3 4 3 4-1.318 4-3V4a1 1 0 0 0-1-1zm-3 12c-1.221 0-2-.592-2-1s.779-1 2-1 2 .592 2 1-.779 1-2 1zm31 8a1 1 0 0 0-1 1v7.405A5.075 5.075 0 0 0 58 31c-2.243 0-4 1.318-4 3s1.757 3 4 3 4-1.318 4-3V24a1 1 0 0 0-1-1zm-3 12c-1.221 0-2-.592-2-1s.779-1 2-1 2 .592 2 1-.779 1-2 1z\"></path>\n      </svg>\n    </NavLink>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable jsx-a11y/label-has-for */\nimport React, { useContext } from 'react';\nimport './ThemeSwitcher.scss';\nimport { ThemeContext } from '../ThemeContext';\n\nexport const ThemeSwitcher = () => {\n  const { toggleTheme } = useContext(ThemeContext);\n\n  return (\n    <div className=\"switch__wrapper\">\n      <input\n        className=\"switch__wrapper-input\"\n        id=\"switch\"\n        type=\"checkbox\"\n        onChange={event => {\n          toggleTheme(event.target.checked);\n        }}\n      />\n      <label htmlFor=\"switch\" className=\"switch__wrapper-label\"></label>\n    </div>\n  );\n};\n","import React from 'react';\nimport './Header.scss';\nimport { HomeIcon } from '../HomeIcon';\nimport { ThemeSwitcher } from '../ThemeSwitcher';\n\nexport const Header = () => (\n  <header className=\"header\">\n    <HomeIcon />\n    <ThemeSwitcher />\n  </header>\n);\n","import React, { useContext } from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport classNames from 'classnames';\nimport './App.scss';\nimport { ThemeContext } from './components/ThemeContext';\nimport { MainScreen } from './components/MainScreen';\nimport { HistoryScreen } from './components/HistoryScreen';\nimport { SearchScreen } from './components/SearchScreen';\nimport { PageNotFound } from './components/PageNotFound';\nimport { Header } from './components/Header';\n\nexport const App: React.FC = () => {\n  const { isDarkTheme } = useContext(ThemeContext);\n\n  return (\n    <div className={classNames('content', { dark: isDarkTheme })}>\n      <div className={classNames('content__container', { dark: isDarkTheme })}>\n        <Header />\n        <Routes>\n          <Route path=\"*\" element={<PageNotFound />} />\n          <Route path=\"/\" element={<MainScreen />} />\n          <Route path=\"lyrics\" element={<SearchScreen />} />\n          <Route path=\"history\" element={<HistoryScreen />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n        </Routes>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.scss';\nimport { App } from './App';\nimport { ThemeProvider } from './components/ThemeContext';\n\nReactDOM.render(\n  <ThemeProvider>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </ThemeProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}